// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    /*
    data = [
      id: 1
      label: "node1"
      elmClass: "icon-folder icon-doctype icon-folder-open"
      children: [
        id: 2
        label: "child1"
        elmClass: "icon-filetype icon-doctype icon-columns"
      ,
        id: 3
        label: "child2"
        elmClass: "icon-filetype icon-doctype icon-columns"
      ]
    ,
      id: 4
      label: "node2"
      elmClass: "icon-folder icon-doctype icon-folder-open"
      children: [
        id: 5
        label: "child3"
      ]
    ,
      id: 6
      label: "node3"
      elmClass: "icon-folder icon-doctype icon-folder-open"
      children: []
    ]
    */

    /*
    json = (->
      json = null
      $.ajax
        async: false
        global: false
        url: dataUrl
        dataType: "json"
        success: (data) ->
          json = data
    
      json
    )()
    */

    var tree;
    tree = $(".js-tree");
    tree.tree({
      autoOpen: false,
      dragAndDrop: true,
      saveState: true,
      closedIcon: "",
      openedIcon: "",
      onCreateLi: function(node, $li) {
        $li.find(".jqtree-title").addClass(node.cls);
        return $li.find(".jqtree-toggler").addClass("icon-caret-down");
      }
    }, tree.bind("tree.contextmenu", function(event) {
      var node;
      node = event.node;
      return alert(node.name + " id: " + node.id + " cls: " + node.cls);
    }), tree.bind("tree.move", function(event) {
      var data, data_url, nodeId, parentPrevId, position, targetId,
        _this = this;
      nodeId = event.move_info.moved_node.id;
      targetId = event.move_info.target_node.id;
      parentPrevId = event.move_info.previous_parent.id;
      position = event.move_info.position;
      if (position === 'inside') {
        position = 0;
      } else if (position === 'after') {
        position = 1;
      }
      data_url = tree.dataUrl || tree.data('url');
      data = {
        action: 'web/resource/move',
        node: nodeId,
        position: position,
        target: targetId,
        prev: parentPrevId
      };
      return $.ajax({
        url: data_url,
        data: data,
        type: 'GET',
        cache: false,
        dataType: 'json',
        success: function(response) {},
        error: function(response) {}
      });
    }));
    tree.bind("tree.open", function(event) {
      var node;
      node = event.node;
      return $(node).addClass('icon-folder-open');
    });
    return tree.bind("tree.click", function(event) {
      var node;
      node = event.node;
      return alert(node.name + " id: " + node.id + " clicked");
    });
  });

}).call(this);
